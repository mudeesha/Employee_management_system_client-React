{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Reacts\\\\reactcrud\\\\src\\\\users\\\\EditUser.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../customcss.css';\nimport axios from 'axios';\nimport { Modal, Button, Form } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport Home from '../pages/Home';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function EditUser(props) {\n  _s();\n  //-------------------------------------------------------------------\n\n  const [auser, setUser] = useState(null);\n  useEffect(() => {\n    // Here you can fetch the user data for the given userId from the API or any other data source\n    // and store it in the state variable `user`\n    if (props.userId) {\n      // Fetch the user data for the given userId and update the state variable `user`\n      const fetchedUser = {\n        id: props.userId,\n        name: props.userName,\n        email: props.userEmail\n      };\n      setUser(fetchedUser);\n    }\n  }, [props.userId]);\n\n  //--------------------------------------------------------------------\n\n  const [users, setUsers] = useState([]);\n  const {\n    id\n  } = useParams();\n  const [name, setName] = useState(props.userName);\n  const [email, setEmail] = useState(props.userEmail);\n  const user = {\n    name,\n    email\n  };\n\n  // useEffect(()=> {\n  //     loadAUser();\n  // }, []);\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    await axios.put(`http://localhost:8080/api/updateEmployee/${auser && auser.id}`, user);\n    // setUser('');\n    setName('');\n    setEmail('');\n    // hideAddModal();\n    props;\n  };\n\n  // const loadAUser=async(id)=>{\n  //     const result = await axios.get(`http://localhost:8080/api/getEmployee/${id}`);\n  //     setUsers(result.data);\n  //     console.log(\"username \"+result.data.name);\n\n  // }\n\n  console.log(auser && auser.id);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: props.isOpen,\n      onHide: props.onClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Edit Employee \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: onSubmit,\n        children: [auser && /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: auser.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: auser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              name: \"name\",\n              value: name,\n              onChange: e => setName(e.target.value),\n              placeholder: \"Enter name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              name: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value),\n              placeholder: \"Enter email\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: props.onClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(EditUser, \"Thvn1VLKhRUEMXqjwSjwDU1ACUw=\", false, function () {\n  return [useParams];\n});\n_c = EditUser;\nvar _c;\n$RefreshReg$(_c, \"EditUser\");","map":{"version":3,"names":["React","useEffect","useState","axios","Modal","Button","Form","useParams","Home","jsxDEV","_jsxDEV","Fragment","_Fragment","EditUser","props","_s","auser","setUser","userId","fetchedUser","id","name","userName","email","userEmail","users","setUsers","setName","setEmail","user","onSubmit","e","preventDefault","put","console","log","children","show","isOpen","onHide","onClose","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","Group","Label","Control","type","value","onChange","target","placeholder","required","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["E:/projects/Reacts/reactcrud/src/users/EditUser.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport '../customcss.css';\r\nimport axios from 'axios';\r\nimport { Modal, Button, Form } from 'react-bootstrap'\r\nimport { useParams } from 'react-router-dom';\r\nimport Home from '../pages/Home';\r\n\r\nexport default function EditUser(props) {\r\n    //-------------------------------------------------------------------\r\n    \r\n\r\n    const [auser, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Here you can fetch the user data for the given userId from the API or any other data source\r\n        // and store it in the state variable `user`\r\n        if (props.userId) {\r\n            // Fetch the user data for the given userId and update the state variable `user`\r\n            const fetchedUser = { id: props.userId, name: props.userName, email: props.userEmail};\r\n            setUser(fetchedUser);\r\n        }\r\n    }, [props.userId]);\r\n\r\n    //--------------------------------------------------------------------\r\n\r\n    const [users,setUsers]= useState([])\r\n    \r\n    const {id}=useParams()\r\n\r\n    const [name, setName] = useState(props.userName);\r\n    const [email, setEmail] = useState(props.userEmail);\r\n\r\n    const user = {\r\n        name,\r\n        email,\r\n    };\r\n\r\n    // useEffect(()=> {\r\n    //     loadAUser();\r\n    // }, []);\r\n\r\n    const onSubmit =async (e) => {\r\n        e.preventDefault();\r\n        await axios.put(`http://localhost:8080/api/updateEmployee/${auser && (auser.id)}`, user);\r\n        // setUser('');\r\n        setName('');\r\n        setEmail('');\r\n        // hideAddModal();\r\n        props\r\n\r\n    };\r\n\r\n    // const loadAUser=async(id)=>{\r\n    //     const result = await axios.get(`http://localhost:8080/api/getEmployee/${id}`);\r\n    //     setUsers(result.data);\r\n    //     console.log(\"username \"+result.data.name);\r\n\r\n    // }\r\n\r\n    console.log(auser && (auser.id));\r\n\r\n  return (\r\n    <>\r\n\r\n<Modal show={props.isOpen} onHide={props.onClose}>\r\n  \r\n    <Modal.Header closeButton>\r\n      <Modal.Title>Edit Employee </Modal.Title>\r\n      </Modal.Header>\r\n      <Form onSubmit={onSubmit}>\r\n      {auser && (\r\n        <Modal.Body>\r\n          <h1>{auser.id}</h1>\r\n          <h1>{auser.name}</h1>\r\n          <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control type=\"text\" name='name' value={name} onChange={(e) => setName(e.target.value)} placeholder=\"Enter name\" required />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\" name='email' value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Enter email\" required />\r\n          </Form.Group>\r\n          {/* <Form.Group>\r\n            <Form.Label>Address</Form.Label>\r\n            <Form.Control as=\"textarea\" rows={3} required />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Phone</Form.Label>\r\n            <Form.Control type=\"text\" required />\r\n          </Form.Group> */}\r\n        </Modal.Body>\r\n        )}\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={props.onClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Save\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Form>\r\n    </Modal>\r\n    <h1>{id}</h1>\r\n      \r\n    </>\r\n  )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}