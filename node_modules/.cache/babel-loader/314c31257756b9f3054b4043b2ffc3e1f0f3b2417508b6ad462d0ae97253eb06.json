{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Reacts\\\\reactcrud\\\\src\\\\users\\\\Testy.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Testy(props) {\n  _s();\n  const [user1, setUser] = useState(null);\n  useEffect(() => {\n    // Here you can fetch the user data for the given userId from the API or any other data source\n    // and store it in the state variable `user`\n    if (props.userId) {\n      // Fetch the user data for the given userId and update the state variable `user`\n      const fetchedUser = {\n        id: props.userId,\n        name: \"John Doe\"\n      };\n      setUser(fetchedUser);\n    }\n  }, [props.userId]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: props.isOpen,\n    onHide: props.onClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Edit User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: user && /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: user1.id,\n            disabled: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: user1.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(Testy, \"0eTrAfhX1yX3bo1s3it6xqskF7U=\");\n_c = Testy;\nvar _c;\n$RefreshReg$(_c, \"Testy\");","map":{"version":3,"names":["React","useEffect","useState","Modal","jsxDEV","_jsxDEV","Testy","props","_s","user1","setUser","userId","fetchedUser","id","name","show","isOpen","onHide","onClose","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","user","type","value","disabled","Footer","onClick","_c","$RefreshReg$"],"sources":["E:/projects/Reacts/reactcrud/src/users/Testy.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nexport default function Testy(props) {\r\n    const [user1, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Here you can fetch the user data for the given userId from the API or any other data source\r\n        // and store it in the state variable `user`\r\n        if (props.userId) {\r\n            // Fetch the user data for the given userId and update the state variable `user`\r\n            const fetchedUser = { id: props.userId, name: \"John Doe\" };\r\n            setUser(fetchedUser);\r\n        }\r\n    }, [props.userId]);\r\n\r\n\r\n  return (\r\n    <Modal show={props.isOpen} onHide={props.onClose}>\r\n        <Modal.Header closeButton>\r\n            <Modal.Title>Edit User</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            {user && (\r\n                <form>\r\n                    <label>\r\n                        ID:\r\n                        <input type=\"text\" value={user1.id} disabled />\r\n                    </label>\r\n                    <br />\r\n                    <label>\r\n                        Name:\r\n                        <input type=\"text\" value={user1.name} />\r\n                    </label>\r\n                </form>\r\n            )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n            <button onClick={props.onClose}>Close</button>\r\n            <button>Save Changes</button>\r\n        </Modal.Footer>\r\n    </Modal>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,KAAKA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,KAAK,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEvCD,SAAS,CAAC,MAAM;IACZ;IACA;IACA,IAAIM,KAAK,CAACI,MAAM,EAAE;MACd;MACA,MAAMC,WAAW,GAAG;QAAEC,EAAE,EAAEN,KAAK,CAACI,MAAM;QAAEG,IAAI,EAAE;MAAW,CAAC;MAC1DJ,OAAO,CAACE,WAAW,CAAC;IACxB;EACJ,CAAC,EAAE,CAACL,KAAK,CAACI,MAAM,CAAC,CAAC;EAGpB,oBACEN,OAAA,CAACF,KAAK;IAACY,IAAI,EAAER,KAAK,CAACS,MAAO;IAACC,MAAM,EAAEV,KAAK,CAACW,OAAQ;IAAAC,QAAA,gBAC7Cd,OAAA,CAACF,KAAK,CAACiB,MAAM;MAACC,WAAW;MAAAF,QAAA,eACrBd,OAAA,CAACF,KAAK,CAACmB,KAAK;QAAAH,QAAA,EAAC;MAAS;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAc;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACzB,eACfrB,OAAA,CAACF,KAAK,CAACwB,IAAI;MAAAR,QAAA,EACNS,IAAI,iBACDvB,OAAA;QAAAc,QAAA,gBACId,OAAA;UAAAc,QAAA,GAAO,KAEH,eAAAd,OAAA;YAAOwB,IAAI,EAAC,MAAM;YAACC,KAAK,EAAErB,KAAK,CAACI,EAAG;YAACkB,QAAQ;UAAA;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC3C,eACRrB,OAAA;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eACNrB,OAAA;UAAAc,QAAA,GAAO,OAEH,eAAAd,OAAA;YAAOwB,IAAI,EAAC,MAAM;YAACC,KAAK,EAAErB,KAAK,CAACK;UAAK;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACpC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAEf;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACQ,eACbrB,OAAA,CAACF,KAAK,CAAC6B,MAAM;MAAAb,QAAA,gBACTd,OAAA;QAAQ4B,OAAO,EAAE1B,KAAK,CAACW,OAAQ;QAAAC,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eAC9CrB,OAAA;QAAAc,QAAA,EAAQ;MAAY;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAClB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACX;AAEZ;AAAClB,EAAA,CAxCuBF,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}